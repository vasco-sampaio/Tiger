Terminals unused in grammar

    "_cast"
    "class"
    "extends"
    "method"
    "nil"


State 2 conflicts: 1 reduce/reduce
State 23 conflicts: 2 shift/reduce


Grammar

    0 $accept: program "end of file"

    1 program: exp
    2        | chunks

    3 rec_exps: ";" exp
    4         | ε

    5 exps: exp rec_exps
    6     | ε

    7 record_creation: typeid "=" exp record_init
    8                | ε

    9 record_init: "," "identifier" "=" exp
   10            | "," "identifier" "=" exp record_init

   11 function_param: exp
   12               | exp "," function_param

   13 method_call: "," exp
   14            | ε

   15 exp: "integer"
   16    | "string"
   17    | typeid "[" exp "]" "of" exp
   18    | typeid "{" record_creation "}"
   19    | lvalue
   20    | "identifier" "(" ")"
   21    | "identifier" "(" function_param ")"
   22    | "-" exp
   23    | exp "+" exp
   24    | exp "-" exp
   25    | exp "*" exp
   26    | exp "/" exp
   27    | exp "=" exp
   28    | exp "<>" exp
   29    | exp ">" exp
   30    | exp "<" exp
   31    | exp ">=" exp
   32    | exp "<=" exp
   33    | exp "&" exp
   34    | exp "|" exp
   35    | "(" exps ")"
   36    | lvalue ":=" exp
   37    | "if" exp "then" exp
   38    | "if" exp "then" exp "else" exp
   39    | "while" exp "do" exp
   40    | "for" "identifier" ":=" exp "to" exp "do" exp
   41    | "break"
   42    | "let" chunks "in" exps "end"
   43    | "new" typeid
   44    | lvalue "." "identifier" "(" ")"
   45    | lvalue "." "identifier" "(" exp method_call ")"

   46 lvalue: "identifier"
   47       | lvalue "." "identifier"
   48       | lvalue "[" exp "]"

   49 funchunk: fundec
   50         | fundec funchunk

   51 vardec: "var" "identifier" ":=" exp
   52       | "var" "identifier" ":" typeid ":=" exp

   53 fundec: "function" "identifier" "(" tyfields ")" "=" exp
   54       | "function" "identifier" "(" tyfields ")" ":" typeid "=" exp
   55       | "primitive" "identifier" "(" tyfields ")"
   56       | "primitive" "identifier" "(" tyfields ")" ":" typeid

   57 chunks: ε
   58       | tychunk chunks
   59       | funchunk chunks
   60       | vardec chunks
   61       | "import" "string" chunks

   62 tychunk: tydec
   63        | tydec tychunk

   64 tydec: "type" "identifier" "=" ty

   65 ty: typeid
   66   | "{" tyfields "}"
   67   | "array" "of" typeid

   68 tyfields: ε
   69         | tyfields.1

   70 tyfields.1: tyfields.1 "," tyfield
   71           | tyfield

   72 tyfield: "identifier" ":" typeid

   73 typeid: "identifier"
   74       | "_namety" "(" "integer" ")"


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256)
    "string" <std::string> (258) 16 61
    "identifier" <misc::symbol> (259) 9 10 20 21 40 44 45 46 47 51 52 53 54 55 56 64 72 73
    "integer" <int> (260) 15 74
    "&" (261) 33
    "array" (262) 67
    ":=" (263) 36 40 51 52
    "break" (264) 41
    "_cast" (265)
    "class" (266)
    ":" (267) 52 54 56 72
    "," (268) 9 10 12 13 70
    "/" (269) 26
    "do" (270) 39 40
    "." (271) 44 45 47
    "else" (272) 38
    "end" (273) 42
    "=" (274) 7 9 10 27 53 54 64
    "extends" (275)
    "for" (276) 40
    "function" (277) 53 54
    ">=" (278) 31
    ">" (279) 29
    "if" (280) 37 38
    "import" (281) 61
    "in" (282) 42
    "{" (283) 18 66
    "[" (284) 17 48
    "<=" (285) 32
    "let" (286) 42
    "(" (287) 20 21 35 44 45 53 54 55 56 74
    "<" (288) 30
    "-" (289) 22 24
    "method" (290)
    "<>" (291) 28
    "new" (292) 43
    "nil" (293)
    "of" (294) 17 67
    "|" (295) 34
    "+" (296) 23
    "primitive" (297) 55 56
    "}" (298) 18 66
    "]" (299) 17 48
    ")" (300) 20 21 35 44 45 53 54 55 56 74
    ";" (301) 3
    "then" (302) 37 38
    "*" (303) 25
    "to" (304) 40
    "type" (305) 64
    "var" (306) 51 52
    "while" (307) 39
    UMINUS (308)
    "_chunks" (309)
    "_namety" (310) 74


Nonterminals, with rules where they appear

    $accept (56)
        on left: 0
    program (57)
        on left: 1 2
        on right: 0
    rec_exps (58)
        on left: 3 4
        on right: 5
    exps (59)
        on left: 5 6
        on right: 35 42
    record_creation (60)
        on left: 7 8
        on right: 18
    record_init (61)
        on left: 9 10
        on right: 7 10
    function_param (62)
        on left: 11 12
        on right: 12 21
    method_call (63)
        on left: 13 14
        on right: 45
    exp (64)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
        on right: 1 3 5 7 9 10 11 12 13 17 22 23 24 25 26 27 28 29 30 31 32 33 34 36 37 38 39 40 45 48 51 52 53 54
    lvalue (65)
        on left: 46 47 48
        on right: 19 36 44 45 47 48
    funchunk (66)
        on left: 49 50
        on right: 50 59
    vardec (67)
        on left: 51 52
        on right: 60
    fundec (68)
        on left: 53 54 55 56
        on right: 49 50
    chunks (69)
        on left: 57 58 59 60 61
        on right: 2 42 58 59 60 61
    tychunk (70)
        on left: 62 63
        on right: 58 63
    tydec (71)
        on left: 64
        on right: 62 63
    ty (72)
        on left: 65 66 67
        on right: 64
    tyfields (73)
        on left: 68 69
        on right: 53 54 55 56 66
    tyfields.1 (74)
        on left: 70 71
        on right: 69 70
    tyfield (75)
        on left: 72
        on right: 70 71
    typeid (76)
        on left: 73 74
        on right: 7 17 18 43 52 54 56 65 67 72


State 0

    0 $accept: • program "end of file"
    1 program: • exp
    2        | • chunks
   15 exp: • "integer"
   16    | • "string"
   17    | • typeid "[" exp "]" "of" exp
   18    | • typeid "{" record_creation "}"
   19    | • lvalue
   20    | • "identifier" "(" ")"
   21    | • "identifier" "(" function_param ")"
   22    | • "-" exp
   23    | • exp "+" exp
   24    | • exp "-" exp
   25    | • exp "*" exp
   26    | • exp "/" exp
   27    | • exp "=" exp
   28    | • exp "<>" exp
   29    | • exp ">" exp
   30    | • exp "<" exp
   31    | • exp ">=" exp
   32    | • exp "<=" exp
   33    | • exp "&" exp
   34    | • exp "|" exp
   35    | • "(" exps ")"
   36    | • lvalue ":=" exp
   37    | • "if" exp "then" exp
   38    | • "if" exp "then" exp "else" exp
   39    | • "while" exp "do" exp
   40    | • "for" "identifier" ":=" exp "to" exp "do" exp
   41    | • "break"
   42    | • "let" chunks "in" exps "end"
   43    | • "new" typeid
   44    | • lvalue "." "identifier" "(" ")"
   45    | • lvalue "." "identifier" "(" exp method_call ")"
   46 lvalue: • "identifier"
   47       | • lvalue "." "identifier"
   48       | • lvalue "[" exp "]"
   49 funchunk: • fundec
   50         | • fundec funchunk
   51 vardec: • "var" "identifier" ":=" exp
   52       | • "var" "identifier" ":" typeid ":=" exp
   53 fundec: • "function" "identifier" "(" tyfields ")" "=" exp
   54       | • "function" "identifier" "(" tyfields ")" ":" typeid "=" exp
   55       | • "primitive" "identifier" "(" tyfields ")"
   56       | • "primitive" "identifier" "(" tyfields ")" ":" typeid
   57 chunks: ε •  ["end of file"]
   58       | • tychunk chunks
   59       | • funchunk chunks
   60       | • vardec chunks
   61       | • "import" "string" chunks
   62 tychunk: • tydec
   63        | • tydec tychunk
   64 tydec: • "type" "identifier" "=" ty
   73 typeid: • "identifier"
   74       | • "_namety" "(" "integer" ")"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 5
    "function"    shift, and go to state 6
    "if"          shift, and go to state 7
    "import"      shift, and go to state 8
    "let"         shift, and go to state 9
    "("           shift, and go to state 10
    "-"           shift, and go to state 11
    "new"         shift, and go to state 12
    "primitive"   shift, and go to state 13
    "type"        shift, and go to state 14
    "var"         shift, and go 